#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# OS-generated files
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# IDE and Editor specific files
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# VSCode
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# JetBrains (CLion, etc.)
.idea/

# Sublime Text
*.sublime-project
*.sublime-workspace

# Netbeans
nbproject/

# Vi/Vim temporary files
*.swp
*~
*.swo

# Emacs temporary files
*#
.#*

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Compiled files and Build artifacts
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Object files
*.o
*.obj
*.ko
*.o.d # Dependency files generated by gcc/clang

# Precompiled Headers
*.gch
*.pch

# Libraries
*.a
*.lib
*.so
*.dylib
*.dll

# Executables
*.exe
*.out
*.app

# Project-specific executables (often named 'template' in your structure)
# This will ignore any file named 'template' in any subdirectory.
**/template

# Build system specific files
# CMake
CMakeCache.txt
CMakeFiles/
cmake_install.cmake
compile_commands.json

# Make-generated (if any that are not source)
# Assuming Makefiles themselves are source and should be tracked.

# Build output directories (common names)
build/
bin/
dist/
Release/
Debug/
out/

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Log files and Output
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# The new script generates logs in:
# final_project/logs/run_YYYYMMDD_HHMMSS_HOSTNAME/
# final_project/logs/summary_YYYYMMDD_HHMMSS_HOSTNAME.csv
# These are intended to be version-controlled as per your request.
# Therefore, DO NOT add 'final_project/logs/' or broad '*.log', '*.csv' patterns here
# unless you specifically un-ignore the desired paths using '!'.

# For example, if you had other miscellaneous .log files you wanted to ignore:
# *.log
# !final_project/logs/ # Un-ignore the entire directory
# !final_project/logs/** # Un-ignore all contents recursively (needed if *.log is general)
# Or more specifically:
# !final_project/logs/**/*.log
# !final_project/logs/**/*.csv

# To keep ONLY the structured logs from the new script and ignore others,
# you would add the general ignore and then the specific un-ignores.
# However, if `final_project/logs/` ONLY contains logs you want to keep,
# it's simpler to just not ignore it or its contents with broad rules.

# Ignore the 'old_logs' directory, assuming it's superseded by the new structured logging.
# If you want to keep 'final_project/old_logs/', remove the line below.

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Python specific (if any Python scripts are used for utilities/testing)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
# Virtual environments
.env/
.venv/
env/
venv/
ENV/
VENV/
*/activate_this.py
# Distribution / packaging
.eggs/
*.egg-info/
*.egg
pip-wheel-metadata/
share/python-wheels/
wheels/
# PyInstaller
*.manifest
*.spec

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Other common ignores
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Temporary files
*.tmp
*.bak
*.orig

# Coverage data
.coverage
.coverage.*
coverage.xml
nosetests.xml

# Shell history
.bash_history
.zsh_history

# Secrets or local configuration (should not be in repo)
# .env  # (already listed under python, but good general practice)
# config.local.yaml
# secrets.*

# If your shell.nix or other Nix files produce local build artifacts in the project root
result
result-*

# If you use direnv
.direnv/