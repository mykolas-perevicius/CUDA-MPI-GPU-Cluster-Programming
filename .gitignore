
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*#
*~
.#*
._*
*.a
*/activate_this.py
*.app
# Assuming Makefiles themselves are source and should be tracked.
*.bak
.bash_history
bin/
build/
# Build output directories (common names)
# Build system specific files
# CMake
CMakeCache.txt
CMakeFiles/
cmake_install.cmake
*.code-workspace
compile_commands.json
# Compiled files and Build artifacts
# config.local.yaml
.coverage
.coverage.*
# Coverage data
coverage.xml
Debug/
.direnv/
dist/
# Distribution / packaging
*.dll
.DS_Store
.DS_Store?
*.dylib
*.egg
*.egg-info/
.eggs/
ehthumbs.db
# Emacs temporary files
.env/
env/
ENV/
# .env  # (already listed under python, but good general practice)
*.exe
# Executables
# !final_project/logs/**/*.csv
# !final_project/logs/**/*.log
# final_project/logs/run_YYYYMMDD_HHMMSS_HOSTNAME/
# final_project/logs/summary_YYYYMMDD_HHMMSS_HOSTNAME.csv
# !final_project/logs/** # Un-ignore all contents recursively (needed if *.log is general)
# !final_project/logs/ # Un-ignore the entire directory
# For example, if you had other miscellaneous .log files you wanted to ignore:
*.gch
# However, if `final_project/logs/` ONLY contains logs you want to keep,
.idea/
# IDE and Editor specific files
# If your shell.nix or other Nix files produce local build artifacts in the project root
# If you use direnv
# If you want to keep 'final_project/old_logs/', remove the line below.
# Ignore the 'old_logs' directory, assuming it's superseded by the new structured logging.
# it's simpler to just not ignore it or its contents with broad rules.
# JetBrains (CLion, etc.)
*.ko
*.lib
# Libraries
# *.log
# Log files and Output
# Make-generated (if any that are not source)
*.manifest
nbproject/
# Netbeans
nix_binary_cache_local/
nosetests.xml
*.o
*.obj
# Object files
*.o.d # Dependency files generated by gcc/clang
*.orig
# Or more specifically:
# OS-generated files
# Other common ignores
*.out
out/
*.pch
pip-wheel-metadata/
prebuilt_executables_local/
# Precompiled Headers
# Project-specific executables (often named 'template' in your structure)
*.pyc
__pycache__/
*.pyd
# PyInstaller
*.pyo
.Python
# Python specific (if any Python scripts are used for utilities/testing)
Release/
result
result-*
# secrets.*
# Secrets or local configuration (should not be in repo)
share/python-wheels/
# Shell history
*.so
*.spec
.Spotlight-V100
*.sublime-project
# Sublime Text
*.sublime-workspace
*.swo
*.swp
# Temporary files
# The new script generates logs in:
# Therefore, DO NOT add 'final_project/logs/' or broad '*.log', '*.csv' patterns here
# These are intended to be version-controlled as per your request.
# This will ignore any file named 'template' in any subdirectory.
Thumbs.db
*.tmp
# To keep ONLY the structured logs from the new script and ignore others,
.Trashes
# unless you specifically un-ignore the desired paths using '!'.
.venv/
venv/
VENV/
# Virtual environments
# Vi/Vim temporary files
.vscode/*
# VSCode
!.vscode/extensions.json
!.vscode/launch.json
!.vscode/settings.json
!.vscode/tasks.json
wheels/
# you would add the general ignore and then the specific un-ignores.
.zsh_history
